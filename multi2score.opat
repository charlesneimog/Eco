
(:patch
 (:name "multi2score")
 (:doc "")
 (:info
  (:created "2023/01/12 09:50:51")
  (:modified "2023/01/23 09:58:46")
  (:by "om-sharp")
  (:version 1.07))
 (:window (:size (953 399)) (:position (582 45)))
 (:grid nil)
 (:lock t)
 (:boxes
  (:box
   (:type :abstraction)
   (:reference
    (:object
     (:class run-py-f-internal)
     (:slots
      ((:name " new-py-script ")
       (:protected-p nil)
       (:icon :py-f)
       (:text
        (:list
         "(py_var (gesto )
"
         "\"
from om_py.python_to_om import to_om

dict = {'gesto0': 'nil',
        'gesto1': 'nil',
        'gesto2': 'nil',
        'gesto3': 'nil',
        'gesto4': 'nil',
        'gesto5': 'nil',
        'gesto6': 'nil',
}


to_om(dict['gesto0'])






\""
         ")"))
       (:wsl nil)))))
   (:group-id nil)
   (:name " new-py-script ")
   (:x 56)
   (:y 25)
   (:w 132)
   (:h 60)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:pre-delay 0)
   (:lock nil)
   (:lambda nil)
   (:reactive nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "GESTO")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 0))
  (:box
   (:type :abstraction)
   (:reference
    (:object
     (:class run-py-f-internal)
     (:slots
      ((:name " new-py-script ")
       (:protected-p nil)
       (:icon :py-f)
       (:text
        (:list
         "(py_var (wavdirectories )
"
         "\"
from om_py.python_to_om import to_om
import os

listDirs = []

# list all .wav files in directory recursively
def list_wav_files(path):
    for root, dirs, files in os.walk(path):
        for file in files:
            if file.endswith(\\\".wav\\\"):
                listDirs.append(os.path.join(root, file))
    return listDirs

to_om(list_wav_files(wavdirectories))
\""
         ")"))
       (:wsl nil)))))
   (:group-id nil)
   (:name " new-py-script ")
   (:x 274)
   (:y 55)
   (:w 132)
   (:h 60)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:pre-delay 0)
   (:lock :locked)
   (:lambda nil)
   (:reactive nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "WAVDIRECTORIES")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 1))
  (:box
   (:type :value)
   (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
   (:group-id nil)
   (:name "value box")
   (:x 190)
   (:y 24)
   (:w 300)
   (:h 34)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:reactive nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value "/run/media/neimog/Neimog/sax-baritono/b/")
   (:id 2))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "fft-analisys")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size (1101 852)) (:position (0 0)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :object)
       (:reference sound)
       (:group-id nil)
       (:name nil)
       (:x 50)
       (:y 183)
       (:w 244)
       (:h 99)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :mini-view)
       (:showname t)
       (:show-markers t)
       (:lock nil)
       (:lambda nil)
       (:reactive nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value :choose-file)
         (:reactive nil)))
       (:outputs (:output (:name "SELF") (:reactive nil)))
       (:window (:size nil) (:position nil))
       (:edition-params (:x2 13079) (:x1 0))
       (:value
        (:object
         (:class sound)
         (:slots
          ((:onset 0)
           (:duration 12045.7295)
           (:n-samples 578195)
           (:n-channels 1)
           (:sample-rate 48000)
           (:smpl-type :float)
           (:sample-size 24)))
         (:add-slots
          ((:markers nil)
           (:gain 1.0)
           (:access-from-file nil)
           (:file-pathname
            (:pathname
             (:directory
              (:relative
               :up
               :up
               :up
               :up
               :up
               "run"
               "media"
               "neimog"
               "Neimog"
               "sax-baritono"
               "b"
               "b123Bb(G#).7"))
             (:device nil)
             (:host nil)
             (:name "b123Bb(G#).7 p15 ff-mp")
             (:type "wav")))))))
       (:id 0))
      (:box
       (:type :value)
       (:reference (:list unsigned-byte 16))
       (:group-id nil)
       (:name "value box")
       (:x 185)
       (:y 339)
       (:w 50)
       (:h 34)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:reactive nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 4096)
       (:id 1))
      (:box
       (:type :object)
       (:reference chord-seq)
       (:group-id nil)
       (:name nil)
       (:x 219)
       (:y 500)
       (:w 262)
       (:h 144)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :mini-view)
       (:showname nil)
       (:show-markers t)
       (:lock nil)
       (:lambda nil)
       (:reactive nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LMIDIC")
         (:value (:list (:list 6000)))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LONSET")
         (:value (:list 0 1000))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LDUR")
         (:value (:list (:list 1000)))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LVEL")
         (:value 100)
         (:reactive nil)))
       (:outputs
        (:output (:name "SELF") (:reactive nil))
        (:output (:name "LMIDIC") (:reactive nil))
        (:output (:name "LONSET") (:reactive nil))
        (:output (:name "LDUR") (:reactive nil))
        (:output (:name "LVEL") (:reactive nil)))
       (:window (:size nil) (:position nil))
       (:edition-params
        (:velocity-display :size)
        (:grid-step 883)
        (:duration-display nil)
        (:grid t)
        (:scale :scale-1/8)
        (:font-size 45)
        (:player :osc)
        (:staff :ggff)
        (:x2 14722)
        (:x1 0))
       (:value
        (:object
         (:class chord-seq)
         (:slots
          ((:onset 0)
           (:duration 12349)
           (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
           (:name "nil")
           (:default-frame-type chord)
           (:symbolic-date nil)
           (:symbolic-dur nil)
           (:symbolic-dur-extent 0)
           (:extras nil)
           (:group-ids nil)
           (:lmidic
            (:list
             (:list 9334 9212 9450 10474 9558 10534 10592 10410)
             (:list 9324 9202 9550 10402 9442 10464 9652 8924 9068)
             (:list 9354 9578 9232 9428 9398 9538 9980 9310 9630)
             (:list 9338 10538 9454 9214 10476 9562 10596)
             (:list 9332 10532 9448 9208 10472)
             (:list 9332 10532 9448 9208 10470 10590 11274)
             (:list 9342 9454 9218 10540 10482 9562 10598 10418 9086)
             (:list 9344 9458 9222 10544 10482 9566)
             (:list 9352 10550 9570 9466)
             (:list 9356 9574 10556 9104 10434)
             (:list 9360 10560 9578)
             (:list 9376 10576 11278 9592)
             (:list 9300 9528 9040 10500 10376 10618)
             (:list 9392 9778 9272 9504 9868)
             (:list 9820 9726 10926)
             (:list
              9170
              9524
              9034
              9414
              9296
              10370
              10434
              10304
              9626
              8886
              4700)
             (:list 9776 9866)
             (:list 9344 10544 9456)
             (:list 9414 10616)))
           (:lonset
            (:list
             597
             1195
             1792
             2389
             2987
             3584
             4181
             4779
             5376
             5973
             6571
             7168
             7765
             8363
             8960
             9557
             10155
             10752
             11349
             12349))
           (:ldur
            (:list
             (:list 1000 1000 1000 1000 1000 1000 1000 1000)
             (:list 1000 1000 1000 1000 1000 1000 1000 1000 1000)
             (:list 1000 1000 1000 1000 1000 1000 1000 1000 1000)
             (:list 1000 1000 1000 1000 1000 1000 1000)
             (:list 1000 1000 1000 1000 1000)
             (:list 1000 1000 1000 1000 1000 1000 1000)
             (:list 1000 1000 1000 1000 1000 1000 1000 1000 1000)
             (:list 1000 1000 1000 1000 1000 1000)
             (:list 1000 1000 1000 1000)
             (:list 1000 1000 1000 1000 1000)
             (:list 1000 1000 1000)
             (:list 1000 1000 1000 1000)
             (:list 1000 1000 1000 1000 1000 1000)
             (:list 1000 1000 1000 1000 1000)
             (:list 1000 1000 1000)
             (:list
              1000
              1000
              1000
              1000
              1000
              1000
              1000
              1000
              1000
              1000
              1000)
             (:list 1000 1000)
             (:list 1000 1000 1000)
             (:list 1000 1000)))
           (:lvel
            (:list
             (:list 80 44 44 40 34 33 31 30)
             (:list 80 74 62 47 47 46 33 30 30)
             (:list 80 57 43 41 40 37 32 31 30)
             (:list 80 39 39 38 37 31 30)
             (:list 80 40 31 30 30)
             (:list 80 40 37 35 34 30 30)
             (:list 80 43 40 37 36 34 30 30 30)
             (:list 80 34 34 33 30 30)
             (:list 80 38 30 30)
             (:list 80 45 36 31 30)
             (:list 80 36 30)
             (:list 80 35 31 30)
             (:list 80 52 42 38 31 30)
             (:list 80 53 32 31 30)
             (:list 80 70 30)
             (:list 80 52 45 42 39 36 33 33 31 31 30)
             (:list 80 30)
             (:list 80 38 30)
             (:list 80 30)))
           (:loffset
            (:list
             (:list 0 0 0 0 0 0 0 0)
             (:list 0 0 0 0 0 0 0 0 0)
             (:list 0 0 0 0 0 0 0 0 0)
             (:list 0 0 0 0 0 0 0)
             (:list 0 0 0 0 0)
             (:list 0 0 0 0 0 0 0)
             (:list 0 0 0 0 0 0 0 0 0)
             (:list 0 0 0 0 0 0)
             (:list 0 0 0 0)
             (:list 0 0 0 0 0)
             (:list 0 0 0)
             (:list 0 0 0 0)
             (:list 0 0 0 0 0 0)
             (:list 0 0 0 0 0)
             (:list 0 0 0)
             (:list 0 0 0 0 0 0 0 0 0 0 0)
             (:list 0 0)
             (:list 0 0 0)
             (:list 0 0)))
           (:lchan
            (:list
             (:list 1 1 1 1 1 1 1 1)
             (:list 1 1 1 1 1 1 1 1 1)
             (:list 1 1 1 1 1 1 1 1 1)
             (:list 1 1 1 1 1 1 1)
             (:list 1 1 1 1 1)
             (:list 1 1 1 1 1 1 1)
             (:list 1 1 1 1 1 1 1 1 1)
             (:list 1 1 1 1 1 1)
             (:list 1 1 1 1)
             (:list 1 1 1 1 1)
             (:list 1 1 1)
             (:list 1 1 1 1)
             (:list 1 1 1 1 1 1)
             (:list 1 1 1 1 1)
             (:list 1 1 1)
             (:list 1 1 1 1 1 1 1 1 1 1 1)
             (:list 1 1)
             (:list 1 1 1)
             (:list 1 1)))
           (:lport
            (:list
             (:list nil nil nil nil nil nil nil nil)
             (:list nil nil nil nil nil nil nil nil nil)
             (:list nil nil nil nil nil nil nil nil nil)
             (:list nil nil nil nil nil nil nil)
             (:list nil nil nil nil nil)
             (:list nil nil nil nil nil nil nil)
             (:list nil nil nil nil nil nil nil nil nil)
             (:list nil nil nil nil nil nil)
             (:list nil nil nil nil)
             (:list nil nil nil nil nil)
             (:list nil nil nil)
             (:list nil nil nil nil)
             (:list nil nil nil nil nil nil)
             (:list nil nil nil nil nil)
             (:list nil nil nil)
             (:list nil nil nil nil nil nil nil nil nil nil nil)
             (:list nil nil)
             (:list nil nil nil)
             (:list nil nil)))
           (:llegato nil)))))
       (:id 2))
      (:box
       (:type :value)
       (:reference (:list unsigned-byte 8))
       (:group-id nil)
       (:name "value box")
       (:x 269)
       (:y 320)
       (:w 34)
       (:h 34)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:reactive nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 20)
       (:id 3))
      (:comment
       (:x 306)
       (:y 327)
       (:w 119)
       (:h 36)
       (:fgcolor nil)
       (:bgcolor nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:text
        "<= 40 Fotos do sons
")
       (:id 4))
      (:box
       (:type :function)
       (:reference get-filename)
       (:group-id nil)
       (:name "get-filename")
       (:x 541)
       (:y 358)
       (:w 117)
       (:h 34)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:reactive nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "X")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 5))
      (:box
       (:type :function)
       (:reference file-pathname)
       (:group-id nil)
       (:name "file-pathname")
       (:x 789)
       (:y 289)
       (:w 125)
       (:h 34)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:reactive nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SDIFFILE")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 6))
      (:box
       (:type :value)
       (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
       (:group-id nil)
       (:name "value box")
       (:x 425)
       (:y 398)
       (:w 348)
       (:h 69)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:reactive nil)
       (:inputs
        (:input
         (:type :optional)
         (:name "in")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value "b123Bb(G#).7 p15 ff-mp.wav")
       (:id 7))
      (:box
       (:type :abstraction)
       (:reference
        (:patch
         (:name "Analisis")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by *app-name*)
          (:version 0))
         (:window (:size nil) (:position nil))
         (:grid nil)
         (:lock nil)
         (:boxes
          (:box
           (:library "OM-CKN")
           (:type :function)
           (:reference sapa-stft)
           (:group-id nil)
           (:name "sapa-stft")
           (:x 200)
           (:y 102)
           (:w 225)
           (:h 34)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:reactive nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SOUND")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "FFT-SIZE")
             (:value 2048)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "HOP-SIZE")
             (:value 512)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "WINDOW-TYPE")
             (:value 2)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 0))
          (:box
           (:library "OM-CKN")
           (:type :function)
           (:reference klingbeil-partial-tracking)
           (:group-id nil)
           (:name "klingbeil-partial-tracking")
           (:x 237)
           (:y 147)
           (:w 301)
           (:h 34)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock :eval-once)
           (:lambda nil)
           (:reactive nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "FFT-INSTANCES")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :key)
             (:name "db-treshold")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 1))
          (:box
           (:type :function)
           (:reference length)
           (:group-id nil)
           (:name "length")
           (:x 452)
           (:y 194)
           (:w 106)
           (:h 34)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:reactive nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SEQUENCE")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 2))
          (:box
           (:type :function)
           (:reference /)
           (:group-id nil)
           (:name "/")
           (:x 529)
           (:y 240)
           (:w 115)
           (:h 34)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:reactive nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "NUM")
             (:value 2)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "args")
             (:value 20)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 3))
          (:box
           (:type :function)
           (:reference round)
           (:group-id nil)
           (:name "round")
           (:x 533)
           (:y 282)
           (:w 95)
           (:h 34)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:reactive nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "M")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 4))
          (:box
           (:type :function)
           (:reference arithm-ser)
           (:group-id nil)
           (:name "arithm-ser")
           (:x 459)
           (:y 350)
           (:w 103)
           (:h 34)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:reactive nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "BEGIN")
             (:value 0)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "END")
             (:value 10)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "STEP")
             (:value 1)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 5))
          (:box
           (:type :abstraction)
           (:reference
            (:patch
             (:name "my-patch")
             (:doc "")
             (:info
              (:created nil)
              (:modified nil)
              (:by *app-name*)
              (:version 0))
             (:window (:size nil) (:position nil))
             (:grid nil)
             (:lock nil)
             (:boxes
              (:box
               (:type :function)
               (:reference lmatrix)
               (:group-id nil)
               (:name "lmatrix")
               (:x 60)
               (:y 72)
               (:w 80)
               (:h 34)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:reactive nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "SDIFFRAME")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 0))
              (:box
               (:type :function)
               (:reference car)
               (:group-id nil)
               (:name "car")
               (:x 71)
               (:y 104)
               (:w 58)
               (:h 34)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:reactive nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "X")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 1))
              (:box
               (:type :function)
               (:reference data)
               (:group-id nil)
               (:name "data")
               (:x 67)
               (:y 141)
               (:w 66)
               (:h 34)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:reactive nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "3D-MODEL")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 2))
              (:box
               (:type :function)
               (:reference mat-trans)
               (:group-id nil)
               (:name "mat-trans")
               (:x 50)
               (:y 175)
               (:w 99)
               (:h 34)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:reactive nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "MATRIX")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 3))
              (:box
               (:type :function)
               (:reference sort-list)
               (:group-id nil)
               (:name "sort-list")
               (:x 52)
               (:y 238)
               (:w 277)
               (:h 34)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:reactive nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "LST")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :key)
                 (:name "test")
                 (:value <)
                 (:reactive nil))
                (:input
                 (:type :key)
                 (:name "key")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 4))
              (:box
               (:type :value)
               (:reference symbol)
               (:group-id nil)
               (:name "value box")
               (:x 170)
               (:y 203)
               (:w 32)
               (:h 34)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:lock nil)
               (:reactive nil)
               (:inputs)
               (:outputs (:output (:name "value") (:reactive nil)))
               (:value >)
               (:id 5))
              (:box
               (:type :value)
               (:reference symbol)
               (:group-id nil)
               (:name "value box")
               (:x 248)
               (:y 203)
               (:w 46)
               (:h 34)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:lock nil)
               (:reactive nil)
               (:inputs)
               (:outputs (:output (:name "value") (:reactive nil)))
               (:value third)
               (:id 6))
              (:box
               (:type :function)
               (:reference first-n)
               (:group-id nil)
               (:name "first-n")
               (:x 305)
               (:y 309)
               (:w 74)
               (:h 34)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:reactive nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "LIST")
                 (:value 10)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "N")
                 (:value 10)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 7))
              (:box
               (:type :value)
               (:reference (:list unsigned-byte 8))
               (:group-id nil)
               (:name "value box")
               (:x 341)
               (:y 278)
               (:w 34)
               (:h 34)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:lock nil)
               (:reactive nil)
               (:inputs)
               (:outputs (:output (:name "value") (:reactive nil)))
               (:value 50)
               (:id 8))
              (:box
               (:type :function)
               (:reference mat-trans)
               (:group-id nil)
               (:name "mat-trans")
               (:x 437)
               (:y 373)
               (:w 99)
               (:h 34)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:reactive nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "MATRIX")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 9))
              (:box
               (:type :function)
               (:reference split)
               (:group-id nil)
               (:name "split")
               (:x 375)
               (:y 458)
               (:w 145)
               (:h 34)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:reactive nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "LIST")
                 (:value nil)
                 (:reactive nil)))
               (:outputs
                (:output (:name "out") (:reactive nil))
                (:output (:name "out1") (:reactive nil))
                (:output (:name "out2") (:reactive nil))
                (:output (:name "out3") (:reactive nil)))
               (:id 10))
              (:box
               (:type :function)
               (:reference f->mc)
               (:group-id nil)
               (:name "f->mc")
               (:x 376)
               (:y 539)
               (:w 75)
               (:h 34)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:reactive nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "FREQ")
                 (:value 440)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 11))
              (:box
               (:type :object)
               (:reference chord-seq)
               (:group-id nil)
               (:name nil)
               (:x 451)
               (:y 668)
               (:w 200)
               (:h 90)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:display :text)
               (:showname nil)
               (:show-markers t)
               (:lock nil)
               (:lambda nil)
               (:reactive nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "SELF")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "LMIDIC")
                 (:value (:list (:list 6000)))
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "LONSET")
                 (:value (:list 0 1000))
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "LDUR")
                 (:value (:list (:list 1000)))
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "LVEL")
                 (:value 100)
                 (:reactive nil)))
               (:outputs
                (:output (:name "SELF") (:reactive nil))
                (:output (:name "LMIDIC") (:reactive nil))
                (:output (:name "LONSET") (:reactive nil))
                (:output (:name "LDUR") (:reactive nil))
                (:output (:name "LVEL") (:reactive nil)))
               (:window (:size nil) (:position nil))
               (:edition-params)
               (:value
                (:object
                 (:class chord-seq)
                 (:slots
                  ((:onset 0)
                   (:duration 1000)
                   (:interpol
                    (:number-or-nil (:number 50) (:t-or-nil nil)))
                   (:name "CHORD-SEQ")
                   (:default-frame-type chord)
                   (:symbolic-date nil)
                   (:symbolic-dur nil)
                   (:symbolic-dur-extent 0)
                   (:extras nil)
                   (:group-ids nil)
                   (:lmidic (:list 6000))
                   (:lonset (:list 0 1000))
                   (:ldur (:list 1000))
                   (:lvel (:list 100))
                   (:loffset (:list 0))
                   (:lchan (:list 1))
                   (:lport (:list nil))
                   (:llegato nil)))))
               (:id 12))
              (:box
               (:type :function)
               (:reference ftime)
               (:group-id nil)
               (:name "ftime")
               (:x 481)
               (:y 171)
               (:w 69)
               (:h 34)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:reactive nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "SDIFFRAME")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 13))
              (:box
               (:type :function)
               (:reference sec->ms)
               (:group-id nil)
               (:name "sec->ms")
               (:x 507)
               (:y 278)
               (:w 93)
               (:h 34)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:reactive nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "N")
                 (:value 0)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 14))
              (:box
               (:type :function)
               (:reference om-scale)
               (:group-id nil)
               (:name "om-scale")
               (:x 1113)
               (:y 655)
               (:w 111)
               (:h 34)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:reactive nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "SELF")
                 (:value 0)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "MINOUT")
                 (:value 1)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "MAXOUT")
                 (:value 30)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "minin")
                 (:value 127)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "maxin")
                 (:value 1)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 15))
              (:box
               (:type :value)
               (:reference single-float)
               (:group-id nil)
               (:name "value box")
               (:x 1082)
               (:y 444)
               (:w 46)
               (:h 34)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:lock nil)
               (:reactive nil)
               (:inputs)
               (:outputs (:output (:name "value") (:reactive nil)))
               (:value 30.0)
               (:id 16))
              (:box
               (:type :value)
               (:reference (:list unsigned-byte 8))
               (:group-id nil)
               (:name "value box")
               (:x 1142)
               (:y 503)
               (:w 42)
               (:h 34)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:lock nil)
               (:reactive nil)
               (:inputs)
               (:outputs (:output (:name "value") (:reactive nil)))
               (:value 80)
               (:id 17))
              (:box
               (:type :function)
               (:reference list)
               (:group-id nil)
               (:name "list")
               (:x 959)
               (:y 366)
               (:w 211)
               (:h 34)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:reactive nil)
               (:inputs
                (:input
                 (:type :optional)
                 (:name "x")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 18))
              (:box
               (:type :function)
               (:reference list)
               (:group-id nil)
               (:name "list")
               (:x 386)
               (:y 581)
               (:w 55)
               (:h 34)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:reactive nil)
               (:inputs
                (:input
                 (:type :optional)
                 (:name "x")
                 (:value 1)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 19))
              (:box
               (:type :function)
               (:reference list)
               (:group-id nil)
               (:name "list")
               (:x 862)
               (:y 703)
               (:w 55)
               (:h 34)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:reactive nil)
               (:inputs
                (:input
                 (:type :optional)
                 (:name "x")
                 (:value 1)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 20))
              (:box
               (:type :function)
               (:reference remove-if)
               (:group-id nil)
               (:name "remove-if")
               (:x 139)
               (:y 383)
               (:w 161)
               (:h 34)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:reactive nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "PREDICATE")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "SEQUENCE")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 21))
              (:box
               (:type :abstraction)
               (:reference
                (:patch
                 (:name "remove-fft-erros")
                 (:doc "")
                 (:info
                  (:created nil)
                  (:modified nil)
                  (:by *app-name*)
                  (:version 0))
                 (:window (:size nil) (:position nil))
                 (:grid nil)
                 (:lock nil)
                 (:boxes
                  (:box
                   (:type :function)
                   (:reference om<)
                   (:group-id nil)
                   (:name "om<")
                   (:x 61)
                   (:y 275)
                   (:w 67)
                   (:h 34)
                   (:color nil)
                   (:border nil)
                   (:roundness nil)
                   (:text-font nil)
                   (:align nil)
                   (:icon :left)
                   (:lock nil)
                   (:lambda nil)
                   (:reactive nil)
                   (:inputs
                    (:input
                     (:type :standard)
                     (:name "NUM1")
                     (:value 0)
                     (:reactive nil))
                    (:input
                     (:type :standard)
                     (:name "NUM2")
                     (:value 1)
                     (:reactive nil)))
                   (:outputs (:output (:name "out") (:reactive nil)))
                   (:id 0))
                  (:box
                   (:type :value)
                   (:reference (:list unsigned-byte 16))
                   (:group-id nil)
                   (:name "value box")
                   (:x 162)
                   (:y 236)
                   (:w 50)
                   (:h 34)
                   (:color
                    (:color-or-nil
                     (:color (:color 1.0 1.0 1.0 1.0))
                     (:t-or-nil t)))
                   (:border nil)
                   (:roundness nil)
                   (:text-font nil)
                   (:align nil)
                   (:lock nil)
                   (:reactive nil)
                   (:inputs)
                   (:outputs (:output (:name "value") (:reactive nil)))
                   (:value 1200)
                   (:id 1))
                  (:box
                   (:type :function)
                   (:reference second)
                   (:group-id nil)
                   (:name "second")
                   (:x 70)
                   (:y 100)
                   (:w 129)
                   (:h 34)
                   (:color nil)
                   (:border nil)
                   (:roundness nil)
                   (:text-font nil)
                   (:align nil)
                   (:icon :left)
                   (:lock nil)
                   (:lambda nil)
                   (:reactive nil)
                   (:inputs
                    (:input
                     (:type :standard)
                     (:name "LIST")
                     (:value nil)
                     (:reactive nil)))
                   (:outputs (:output (:name "out") (:reactive nil)))
                   (:id 2))
                  (:box
                   (:type :function)
                   (:reference f->mc)
                   (:group-id nil)
                   (:name "f->mc")
                   (:x 96)
                   (:y 135)
                   (:w 75)
                   (:h 34)
                   (:color nil)
                   (:border nil)
                   (:roundness nil)
                   (:text-font nil)
                   (:align nil)
                   (:icon :left)
                   (:lock nil)
                   (:lambda nil)
                   (:reactive nil)
                   (:inputs
                    (:input
                     (:type :standard)
                     (:name "FREQ")
                     (:value 440)
                     (:reactive nil)))
                   (:outputs (:output (:name "out") (:reactive nil)))
                   (:id 3))
                  (:box
                   (:type :io)
                   (:reference
                    (:in
                     (:type omin)
                     (:index 1)
                     (:name "input 1")
                     (:doc "")))
                   (:group-id nil)
                   (:name "input 1")
                   (:x 70)
                   (:y 50)
                   (:w 65)
                   (:h 42)
                   (:color
                    (:color-or-nil
                     (:color (:color 1.0 1.0 1.0 0.0))
                     (:t-or-nil t)))
                   (:border 0)
                   (:roundness 0)
                   (:text-font nil)
                   (:align :center)
                   (:icon :top)
                   (:reactive nil)
                   (:inputs)
                   (:outputs (:output (:name "out") (:reactive nil)))
                   (:id 4))
                  (:box
                   (:type :io)
                   (:reference
                    (:out
                     (:type omout)
                     (:name "output 1")
                     (:index 1)
                     (:doc "")))
                   (:group-id nil)
                   (:name "output 1")
                   (:x 152)
                   (:y 423)
                   (:w 74)
                   (:h 42)
                   (:color
                    (:color-or-nil
                     (:color (:color 1.0 1.0 1.0 0.0))
                     (:t-or-nil t)))
                   (:border 0)
                   (:roundness 0)
                   (:text-font nil)
                   (:align :center)
                   (:icon :top)
                   (:reactive nil)
                   (:inputs
                    (:input
                     (:type :standard)
                     (:name "out-value")
                     (:value nil)
                     (:reactive nil)))
                   (:outputs)
                   (:id 5)))
                 (:connections
                  (:connection
                   (:from (:box 0 :out 0))
                   (:to (:box 5 :in 0)))
                  (:connection
                   (:from (:box 1 :out 0))
                   (:to (:box 0 :in 1)))
                  (:connection
                   (:from (:box 2 :out 0))
                   (:to (:box 3 :in 0)))
                  (:connection
                   (:from (:box 3 :out 0))
                   (:to (:box 0 :in 0)))
                  (:connection
                   (:from (:box 4 :out 0))
                   (:to (:box 2 :in 0))
                   (:attributes
                    (:color
                     (:color 0.2 0.4 0.5 1.0)
                     :style
                     :curved
                     :modif
                     nil))))))
               (:group-id nil)
               (:name "remove-fft-erros")
               (:x 25)
               (:y 286)
               (:w 141)
               (:h 60)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:display :hidden)
               (:pre-delay 0)
               (:lock nil)
               (:lambda :lambda)
               (:reactive nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "input 1")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "output 1") (:reactive nil)))
               (:id 22))
              (:box
               (:type :function)
               (:reference list-min)
               (:group-id nil)
               (:name "list-min")
               (:x 734)
               (:y 469)
               (:w 83)
               (:h 34)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:reactive nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "SELF")
                 (:value (:list 0 1 2))
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 23))
              (:box
               (:type :function)
               (:reference list-max)
               (:group-id nil)
               (:name "list-max")
               (:x 821)
               (:y 412)
               (:w 87)
               (:h 34)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:reactive nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "SELF")
                 (:value (:list 0 1 2))
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 24))
              (:box
               (:type :special)
               (:reference if)
               (:group-id nil)
               (:name "if")
               (:x 119)
               (:y 801)
               (:w 204)
               (:h 34)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:reactive nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "TEST")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "THEN")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 25))
              (:comment
               (:x 1231)
               (:y 658)
               (:w 131)
               (:h 36)
               (:fgcolor nil)
               (:bgcolor nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:text
                "Escala Arbitrária.
")
               (:id 26))
              (:comment
               (:x 330)
               (:y 805)
               (:w 142)
               (:h 36)
               (:fgcolor nil)
               (:bgcolor nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:text
                "Remove nil chords
")
               (:id 27))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 1)
                 (:name "input 1")
                 (:doc "")))
               (:group-id nil)
               (:name "input 1")
               (:x 368)
               (:y 12)
               (:w 65)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:reactive nil)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 28))
              (:box
               (:type :io)
               (:reference
                (:out
                 (:type omout)
                 (:name "output 1")
                 (:index 1)
                 (:doc "")))
               (:group-id nil)
               (:name "output 1")
               (:x 179)
               (:y 853)
               (:w 74)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:reactive nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "out-value")
                 (:value nil)
                 (:reactive nil)))
               (:outputs)
               (:id 29)))
             (:connections
              (:connection
               (:from (:box 0 :out 0))
               (:to (:box 1 :in 0)))
              (:connection
               (:from (:box 1 :out 0))
               (:to (:box 2 :in 0)))
              (:connection
               (:from (:box 2 :out 0))
               (:to (:box 3 :in 0)))
              (:connection
               (:from (:box 3 :out 0))
               (:to (:box 4 :in 0)))
              (:connection
               (:from (:box 4 :out 0))
               (:to (:box 7 :in 0)))
              (:connection
               (:from (:box 5 :out 0))
               (:to (:box 4 :in 1)))
              (:connection
               (:from (:box 6 :out 0))
               (:to (:box 4 :in 2)))
              (:connection
               (:from (:box 7 :out 0))
               (:to (:box 21 :in 1)))
              (:connection
               (:from (:box 8 :out 0))
               (:to (:box 7 :in 1)))
              (:connection
               (:from (:box 9 :out 0))
               (:to (:box 10 :in 0)))
              (:connection
               (:from (:box 10 :out 1))
               (:to (:box 11 :in 0)))
              (:connection
               (:from (:box 10 :out 2))
               (:to (:box 15 :in 0)))
              (:connection
               (:from (:box 10 :out 2))
               (:to (:box 23 :in 0)))
              (:connection
               (:from (:box 10 :out 2))
               (:to (:box 24 :in 0)))
              (:connection
               (:from (:box 11 :out 0))
               (:to (:box 19 :in 0)))
              (:connection
               (:from (:box 12 :out 0))
               (:to (:box 25 :in 1)))
              (:connection
               (:from (:box 13 :out 0))
               (:to (:box 14 :in 0)))
              (:connection
               (:from (:box 14 :out 0))
               (:to (:box 18 :in 0)))
              (:connection
               (:from (:box 15 :out 0))
               (:to (:box 20 :in 0)))
              (:connection
               (:from (:box 16 :out 0))
               (:to (:box 15 :in 1)))
              (:connection
               (:from (:box 17 :out 0))
               (:to (:box 15 :in 2)))
              (:connection
               (:from (:box 18 :out 0))
               (:to (:box 12 :in 2))
               (:attributes (:color nil :style nil :modif (0 21/101))))
              (:connection
               (:from (:box 19 :out 0))
               (:to (:box 12 :in 1)))
              (:connection
               (:from (:box 20 :out 0))
               (:to (:box 12 :in 4)))
              (:connection
               (:from (:box 21 :out 0))
               (:to (:box 9 :in 0)))
              (:connection
               (:from (:box 21 :out 0))
               (:to (:box 25 :in 0)))
              (:connection
               (:from (:box 22 :out 0))
               (:to (:box 21 :in 0))
               (:attributes
                (:color
                 (:color 0.2 0.4 0.5 1.0)
                 :style
                 nil
                 :modif
                 nil)))
              (:connection
               (:from (:box 23 :out 0))
               (:to (:box 15 :in 3)))
              (:connection
               (:from (:box 24 :out 0))
               (:to (:box 15 :in 4)))
              (:connection
               (:from (:box 25 :out 0))
               (:to (:box 29 :in 0)))
              (:connection
               (:from (:box 28 :out 0))
               (:to (:box 13 :in 0)))
              (:connection
               (:from (:box 28 :out 0))
               (:to (:box 0 :in 0))))))
           (:group-id nil)
           (:name "my-patch")
           (:x 40)
           (:y 242)
           (:w 171)
           (:h 74)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:display :hidden)
           (:pre-delay 0)
           (:lock nil)
           (:lambda :lambda)
           (:reactive nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "input 1")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "output 1") (:reactive nil)))
           (:id 6))
          (:box
           (:library "OM-CKN")
           (:type :function)
           (:reference choose)
           (:group-id nil)
           (:name "choose")
           (:x 310)
           (:y 303)
           (:w 84)
           (:h 34)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:reactive nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "NOTELIST")
             (:value (:list 1 2 3 4 5 6 7 8 9 10))
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "CHORD-N")
             (:value 2)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 7))
          (:box
           (:type :value)
           (:reference bit)
           (:group-id nil)
           (:name "value box")
           (:x 462)
           (:y 315)
           (:w 32)
           (:h 34)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:reactive nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value 1)
           (:id 8))
          (:box
           (:type :abstraction)
           (:reference
            (:patch
             (:name "mk-chord-seq")
             (:doc "")
             (:info
              (:created nil)
              (:modified nil)
              (:by *app-name*)
              (:version 0))
             (:window (:size nil) (:position nil))
             (:grid nil)
             (:lock nil)
             (:boxes
              (:box
               (:type :function)
               (:reference mapcar)
               (:group-id nil)
               (:name "mapcar")
               (:x 212)
               (:y 100)
               (:w 124)
               (:h 34)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:reactive nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "FUNCTION")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "LIST")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 0))
              (:box
               (:type :function)
               (:reference mapcar)
               (:group-id nil)
               (:name "mapcar")
               (:x 110)
               (:y 262)
               (:w 86)
               (:h 34)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:reactive nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "FUNCTION")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "LIST")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 1))
              (:box
               (:type :function)
               (:reference lmidic)
               (:group-id nil)
               (:name "lmidic")
               (:x 73)
               (:y 210)
               (:w 74)
               (:h 34)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda :lambda)
               (:reactive nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "SELF")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 2))
              (:box
               (:type :function)
               (:reference mapcar)
               (:group-id nil)
               (:name "mapcar")
               (:x 255)
               (:y 273)
               (:w 86)
               (:h 34)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:reactive nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "FUNCTION")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "LIST")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 3))
              (:box
               (:type :function)
               (:reference lvel)
               (:group-id nil)
               (:name "lvel")
               (:x 229)
               (:y 232)
               (:w 59)
               (:h 34)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda :lambda)
               (:reactive nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "SELF")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 4))
              (:box
               (:type :function)
               (:reference lonset)
               (:group-id nil)
               (:name "lonset")
               (:x 353)
               (:y 242)
               (:w 76)
               (:h 34)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda :lambda)
               (:reactive nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "SELF")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 5))
              (:box
               (:type :function)
               (:reference mapcar)
               (:group-id nil)
               (:name "mapcar")
               (:x 431)
               (:y 299)
               (:w 86)
               (:h 34)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:reactive nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "FUNCTION")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "LIST")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 6))
              (:box
               (:type :function)
               (:reference car)
               (:group-id nil)
               (:name "car")
               (:x 403)
               (:y 354)
               (:w 58)
               (:h 34)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda :lambda)
               (:reactive nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "X")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 7))
              (:box
               (:type :function)
               (:reference mapcar)
               (:group-id nil)
               (:name "mapcar")
               (:x 470)
               (:y 394)
               (:w 86)
               (:h 34)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:reactive nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "FUNCTION")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "LIST")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 8))
              (:box
               (:type :function)
               (:reference flat)
               (:group-id nil)
               (:name "flat")
               (:x 106)
               (:y 369)
               (:w 57)
               (:h 34)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:reactive nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "LST")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "level")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 9))
              (:box
               (:type :value)
               (:reference bit)
               (:group-id nil)
               (:name "value box")
               (:x 123)
               (:y 334)
               (:w 32)
               (:h 34)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:lock nil)
               (:reactive nil)
               (:inputs)
               (:outputs (:output (:name "value") (:reactive nil)))
               (:value 1)
               (:id 10))
              (:box
               (:type :function)
               (:reference flat)
               (:group-id nil)
               (:name "flat")
               (:x 211)
               (:y 402)
               (:w 57)
               (:h 34)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:reactive nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "LST")
                 (:value 11)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "level")
                 (:value 1)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 11))
              (:box
               (:type :function)
               (:reference remove)
               (:group-id nil)
               (:name "remove")
               (:x 536)
               (:y 133)
               (:w 86)
               (:h 34)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:reactive nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "ITEM")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "SEQUENCE")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 12))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 1)
                 (:name "input 1")
                 (:doc "")))
               (:group-id nil)
               (:name "input 1")
               (:x 212)
               (:y 50)
               (:w 65)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:reactive nil)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 13))
              (:box
               (:type :io)
               (:reference
                (:out
                 (:type omout)
                 (:name "output 1")
                 (:index 1)
                 (:doc "")))
               (:group-id nil)
               (:name "output 1")
               (:x 104)
               (:y 533)
               (:w 74)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:reactive nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "out-value")
                 (:value nil)
                 (:reactive nil)))
               (:outputs)
               (:id 14))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 2)
                 (:name "input 2")
                 (:doc "")))
               (:group-id nil)
               (:name "input 2")
               (:x 274)
               (:y 50)
               (:w 65)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:reactive nil)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 15))
              (:box
               (:type :io)
               (:reference
                (:out
                 (:type omout)
                 (:name "output 2")
                 (:index 2)
                 (:doc "")))
               (:group-id nil)
               (:name "output 2")
               (:x 516)
               (:y 504)
               (:w 74)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:reactive nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "out-value")
                 (:value nil)
                 (:reactive nil)))
               (:outputs)
               (:id 16))
              (:box
               (:type :io)
               (:reference
                (:out
                 (:type omout)
                 (:name "output 3")
                 (:index 3)
                 (:doc "")))
               (:group-id nil)
               (:name "output 3")
               (:x 257)
               (:y 512)
               (:w 74)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:reactive nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "out-value")
                 (:value nil)
                 (:reactive nil)))
               (:outputs)
               (:id 17)))
             (:connections
              (:connection
               (:from (:box 0 :out 0))
               (:to (:box 12 :in 1)))
              (:connection
               (:from (:box 1 :out 0))
               (:to (:box 9 :in 0)))
              (:connection
               (:from (:box 2 :out 0))
               (:to (:box 1 :in 0)))
              (:connection
               (:from (:box 3 :out 0))
               (:to (:box 11 :in 0)))
              (:connection
               (:from (:box 4 :out 0))
               (:to (:box 3 :in 0)))
              (:connection
               (:from (:box 5 :out 0))
               (:to (:box 6 :in 0)))
              (:connection
               (:from (:box 6 :out 0))
               (:to (:box 8 :in 1)))
              (:connection
               (:from (:box 7 :out 0))
               (:to (:box 8 :in 0)))
              (:connection
               (:from (:box 8 :out 0))
               (:to (:box 16 :in 0))
               (:attributes
                (:color
                 (:color 0.2 0.4 0.5 1.0)
                 :style
                 :curved
                 :modif
                 nil)))
              (:connection
               (:from (:box 9 :out 0))
               (:to (:box 14 :in 0))
               (:attributes
                (:color
                 (:color 0.2 0.4 0.5 1.0)
                 :style
                 :curved
                 :modif
                 nil)))
              (:connection
               (:from (:box 10 :out 0))
               (:to (:box 9 :in 1)))
              (:connection
               (:from (:box 11 :out 0))
               (:to (:box 17 :in 0))
               (:attributes
                (:color
                 (:color 0.2 0.4 0.5 1.0)
                 :style
                 :curved
                 :modif
                 nil)))
              (:connection
               (:from (:box 12 :out 0))
               (:to (:box 6 :in 1)))
              (:connection
               (:from (:box 12 :out 0))
               (:to (:box 3 :in 1)))
              (:connection
               (:from (:box 12 :out 0))
               (:to (:box 1 :in 1)))
              (:connection
               (:from (:box 13 :out 0))
               (:to (:box 0 :in 0))
               (:attributes
                (:color
                 (:color 0.2 0.4 0.5 1.0)
                 :style
                 :curved
                 :modif
                 nil)))
              (:connection
               (:from (:box 15 :out 0))
               (:to (:box 0 :in 1))
               (:attributes
                (:color
                 (:color 0.2 0.4 0.5 1.0)
                 :style
                 :curved
                 :modif
                 nil))))))
           (:group-id nil)
           (:name "mk-chord-seq")
           (:x 214)
           (:y 387)
           (:w 158)
           (:h 60)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:display :hidden)
           (:pre-delay 0)
           (:lock nil)
           (:lambda nil)
           (:reactive nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "input 1")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "input 2")
             (:value nil)
             (:reactive nil)))
           (:outputs
            (:output (:name "output 1") (:reactive nil))
            (:output (:name "output 2") (:reactive nil))
            (:output (:name "output 3") (:reactive nil)))
           (:id 9))
          (:box
           (:type :function)
           (:reference sample-rate)
           (:group-id nil)
           (:name "sample-rate")
           (:x 70)
           (:y 100)
           (:w 114)
           (:h 34)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:reactive nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "INTERNAL-SOUND")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 10))
          (:box
           (:type :object)
           (:reference chord-seq)
           (:group-id nil)
           (:name nil)
           (:x 63)
           (:y 536)
           (:w 434)
           (:h 71)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:display :text)
           (:showname nil)
           (:show-markers t)
           (:lock nil)
           (:lambda nil)
           (:reactive nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SELF")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "LMIDIC")
             (:value (:list (:list 6000)))
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "LONSET")
             (:value (:list 0 1000))
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "LDUR")
             (:value (:list (:list 1000)))
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "LVEL")
             (:value 100)
             (:reactive nil)))
           (:outputs
            (:output (:name "SELF") (:reactive nil))
            (:output (:name "LMIDIC") (:reactive nil))
            (:output (:name "LONSET") (:reactive nil))
            (:output (:name "LDUR") (:reactive nil))
            (:output (:name "LVEL") (:reactive nil)))
           (:window (:size nil) (:position nil))
           (:edition-params)
           (:value
            (:object
             (:class chord-seq)
             (:slots
              ((:onset 0)
               (:duration 1000)
               (:interpol
                (:number-or-nil (:number 50) (:t-or-nil nil)))
               (:name "CHORD-SEQ")
               (:default-frame-type chord)
               (:symbolic-date nil)
               (:symbolic-dur nil)
               (:symbolic-dur-extent 0)
               (:extras nil)
               (:group-ids nil)
               (:lmidic (:list 6000))
               (:lonset (:list 0 1000))
               (:ldur (:list 1000))
               (:lvel (:list 100))
               (:loffset (:list 0))
               (:lchan (:list 1))
               (:lport (:list nil))
               (:llegato nil)))))
           (:id 11))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 1) (:name "input 1") (:doc "")))
           (:group-id nil)
           (:name "input 1")
           (:x 126)
           (:y 15)
           (:w 65)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:reactive nil)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 12))
          (:box
           (:type :io)
           (:reference
            (:out
             (:type omout)
             (:name "output 1")
             (:index 1)
             (:doc "")))
           (:group-id nil)
           (:name "output 1")
           (:x 102)
           (:y 665)
           (:w 74)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:reactive nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "out-value")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 13))
          (:box
           (:type :io)
           (:reference
            (:in
             (:type omin)
             (:index 2)
             (:name "FFT-Window")
             (:doc "")))
           (:group-id nil)
           (:name "FFT-Window")
           (:x 234)
           (:y 10)
           (:w 105)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:reactive nil)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 14))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 3) (:name "HopSize") (:doc "")))
           (:group-id nil)
           (:name "HopSize")
           (:x 357)
           (:y 25)
           (:w 77)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:reactive nil)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 15))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 4) (:name "fotos") (:doc "")))
           (:group-id nil)
           (:name "fotos")
           (:x 587)
           (:y 190)
           (:w 65)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:reactive nil)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 16))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 5) (:name "db") (:doc "")))
           (:group-id nil)
           (:name "db")
           (:x 532)
           (:y 27)
           (:w 40)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:reactive nil)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 17)))
         (:connections
          (:connection (:from (:box 0 :out 0)) (:to (:box 1 :in 0)))
          (:connection (:from (:box 1 :out 0)) (:to (:box 2 :in 0)))
          (:connection (:from (:box 1 :out 0)) (:to (:box 7 :in 0)))
          (:connection (:from (:box 2 :out 0)) (:to (:box 3 :in 0)))
          (:connection (:from (:box 2 :out 0)) (:to (:box 5 :in 1)))
          (:connection (:from (:box 3 :out 0)) (:to (:box 4 :in 0)))
          (:connection (:from (:box 4 :out 0)) (:to (:box 5 :in 2)))
          (:connection (:from (:box 5 :out 0)) (:to (:box 7 :in 1)))
          (:connection
           (:from (:box 6 :out 0))
           (:to (:box 9 :in 0))
           (:attributes
            (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))
          (:connection
           (:from (:box 7 :out 0))
           (:to (:box 9 :in 1))
           (:attributes
            (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))
          (:connection (:from (:box 8 :out 0)) (:to (:box 5 :in 0)))
          (:connection (:from (:box 9 :out 0)) (:to (:box 11 :in 1)))
          (:connection (:from (:box 9 :out 1)) (:to (:box 11 :in 2)))
          (:connection (:from (:box 9 :out 2)) (:to (:box 11 :in 4)))
          (:connection (:from (:box 11 :out 0)) (:to (:box 13 :in 0)))
          (:connection (:from (:box 12 :out 0)) (:to (:box 10 :in 0)))
          (:connection (:from (:box 12 :out 0)) (:to (:box 0 :in 0)))
          (:connection (:from (:box 14 :out 0)) (:to (:box 0 :in 1)))
          (:connection (:from (:box 15 :out 0)) (:to (:box 0 :in 2)))
          (:connection
           (:from (:box 16 :out 0))
           (:to (:box 3 :in 1))
           (:attributes
            (:color
             (:color 0.2 0.4 0.5 1.0)
             :style
             :curved
             :modif
             nil)))
          (:connection
           (:from (:box 17 :out 0))
           (:to (:box 1 :in 1))))))
       (:group-id nil)
       (:name "Analisis")
       (:x 148)
       (:y 421)
       (:w 200)
       (:h 76)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :hidden)
       (:pre-delay 0)
       (:lock nil)
       (:lambda nil)
       (:reactive nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "input 1")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "FFT-Window")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "HopSize")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "fotos")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "db")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "output 1") (:reactive nil)))
       (:id 8))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "value box")
       (:x 304)
       (:y 385)
       (:w 39)
       (:h 34)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:reactive nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value -50)
       (:id 9))
      (:box
       (:type :special)
       (:reference loop-list)
       (:group-id nil)
       (:name "loop-list")
       (:x 136)
       (:y 132)
       (:w 71)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:reactive nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "list")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "i") (:reactive nil)))
       (:id 10))
      (:box
       (:type :function)
       (:reference lmidic)
       (:group-id nil)
       (:name "lmidic")
       (:x 259)
       (:y 668)
       (:w 74)
       (:h 34)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:reactive nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 11))
      (:box
       (:type :function)
       (:reference lvel)
       (:group-id nil)
       (:name "lvel")
       (:x 344)
       (:y 667)
       (:w 59)
       (:h 34)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:reactive nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 12))
      (:box
       (:type :function)
       (:reference lonset)
       (:group-id nil)
       (:name "lonset")
       (:x 409)
       (:y 666)
       (:w 76)
       (:h 34)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:reactive nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 13))
      (:box
       (:type :abstraction)
       (:reference
        (:object
         (:class run-py-f-internal)
         (:slots
          ((:name " new-py-script ")
           (:protected-p nil)
           (:icon :py-f)
           (:text
            (:list
             "(py_var (veldata middata onsetdata jsonkey jsonfile wavfile )
"
             "\"
from om_py.python_to_om import to_om
import os
import json

## see if json file exists
if not os.path.exists(jsonfile):
    # create json file
    with open(jsonfile, 'w') as outfile:
        json.dump({}, outfile)

else:
    with open(jsonfile, 'r') as infile:
        data = json.load(infile)
        # add veldata, middata, onsetdata to json file
        data[jsonkey] = {
            'velocity': veldata,
            'midi': middata,
            'onset': onsetdata,
            'wavfile': wavfile
        }
             
        json.dump(data, open(jsonfile, 'w'), indent=4)
        
to_om('done')
        

    
\""
             ")"))
           (:wsl nil)))))
       (:group-id nil)
       (:name " new-py-script ")
       (:x 672)
       (:y 539)
       (:w 132)
       (:h 60)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :hidden)
       (:pre-delay 0)
       (:lock nil)
       (:lambda nil)
       (:reactive nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "VELDATA")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "MIDDATA")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "ONSETDATA")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "JSONKEY")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "JSONFILE")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "WAVFILE")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 14))
      (:box
       (:type :function)
       (:reference outfile)
       (:group-id nil)
       (:name "outfile")
       (:x 871)
       (:y 496)
       (:w 76)
       (:h 34)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:reactive nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "NAME")
         (:value "")
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 15))
      (:box
       (:type :value)
       (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
       (:group-id nil)
       (:name "value box")
       (:x 873)
       (:y 435)
       (:w 128)
       (:h 34)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:reactive nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value "sergioData.json")
       (:id 16))
      (:box
       (:type :function)
       (:reference flat)
       (:group-id nil)
       (:name "flat")
       (:x 144)
       (:y 100)
       (:w 57)
       (:h 34)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:reactive nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 17))
      (:box
       (:type :special)
       (:reference iterate)
       (:group-id nil)
       (:name "iterate")
       (:x 649)
       (:y 710)
       (:w 62)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:reactive nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "action")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 18))
      (:box
       (:type :special)
       (:reference collect)
       (:group-id nil)
       (:name "collect")
       (:x 724)
       (:y 618)
       (:w 62)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.7 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:reactive nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "data-in")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "push")
         (:value t)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "init")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "collect") (:reactive nil))
        (:output (:name "data-out") (:reactive nil))
        (:output (:name "init") (:reactive nil)))
       (:id 19))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "input 1") (:doc "")))
       (:group-id nil)
       (:name "input 1")
       (:x 144)
       (:y 50)
       (:w 65)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:reactive nil)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 20))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "output 1") (:index 1) (:doc "")))
       (:group-id nil)
       (:name "output 1")
       (:x 848)
       (:y 720)
       (:w 74)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:reactive nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 21)))
     (:connections
      (:connection (:from (:box 0 :out 0)) (:to (:box 6 :in 0)))
      (:connection
       (:from (:box 0 :out 0))
       (:to (:box 8 :in 0))
       (:attributes
        (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))
      (:connection
       (:from (:box 1 :out 0))
       (:to (:box 8 :in 1))
       (:attributes
        (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))
      (:connection (:from (:box 1 :out 0)) (:to (:box 8 :in 2)))
      (:connection (:from (:box 2 :out 0)) (:to (:box 11 :in 0)))
      (:connection (:from (:box 2 :out 0)) (:to (:box 12 :in 0)))
      (:connection (:from (:box 2 :out 0)) (:to (:box 13 :in 0)))
      (:connection
       (:from (:box 3 :out 0))
       (:to (:box 8 :in 3))
       (:attributes
        (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))
      (:connection (:from (:box 5 :out 0)) (:to (:box 7 :in 0)))
      (:connection (:from (:box 6 :out 0)) (:to (:box 5 :in 0)))
      (:connection (:from (:box 6 :out 0)) (:to (:box 14 :in 5)))
      (:connection (:from (:box 7 :out 0)) (:to (:box 14 :in 3)))
      (:connection (:from (:box 8 :out 0)) (:to (:box 2 :in 0)))
      (:connection (:from (:box 9 :out 0)) (:to (:box 8 :in 4)))
      (:connection (:from (:box 10 :out 0)) (:to (:box 0 :in 0)))
      (:connection (:from (:box 11 :out 0)) (:to (:box 14 :in 1)))
      (:connection (:from (:box 12 :out 0)) (:to (:box 14 :in 0)))
      (:connection (:from (:box 13 :out 0)) (:to (:box 14 :in 2)))
      (:connection (:from (:box 14 :out 0)) (:to (:box 19 :in 0)))
      (:connection (:from (:box 15 :out 0)) (:to (:box 14 :in 4)))
      (:connection (:from (:box 15 :out 0)) (:to (:box 21 :in 0)))
      (:connection (:from (:box 16 :out 0)) (:to (:box 15 :in 0)))
      (:connection (:from (:box 17 :out 0)) (:to (:box 10 :in 0)))
      (:connection (:from (:box 19 :out 0)) (:to (:box 18 :in 0)))
      (:connection
       (:from (:box 20 :out 0))
       (:to (:box 17 :in 0))
       (:attributes
        (:color
         (:color 0.2 0.4 0.5 1.0)
         :style
         :curved
         :modif
         nil))))))
   (:group-id nil)
   (:name "fft-analisys")
   (:x 240)
   (:y 146)
   (:w 200)
   (:h 60)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:pre-delay 0)
   (:lock nil)
   (:lambda nil)
   (:reactive nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "input 1")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "output 1") (:reactive nil)))
   (:id 3)))
 (:connections
  (:connection
   (:from (:box 1 :out 0))
   (:to (:box 3 :in 0))
   (:attributes
    (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))
  (:connection (:from (:box 2 :out 0)) (:to (:box 1 :in 0)))))